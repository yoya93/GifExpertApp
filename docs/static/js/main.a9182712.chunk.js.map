{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","components/helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertapp.js","index.js"],"names":["AddCategory","setCategories","useState","imputValue","setImputValue","onSubmit","e","preventDefault","cate","type","value","onChange","target","GifItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","res","json","data","gifs","map","g","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","img","useFetchGifs","key","GifExpertapp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,cADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAahD,OACE,0BAAMC,SARa,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAACO,GACbP,EAAc,CAACE,GAAF,mBAAiBK,KAC9BJ,EAAc,SAKd,2BAAOK,KAAK,OAAOC,MAAOP,EAAYQ,SAZhB,SAACL,GACzBF,EAAcE,EAAEM,OAAOF,YCJdG,EAAU,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACnC,OACE,yBAAKC,UAAU,4BACb,yBAAKC,IAAKF,EAAKG,IAAKJ,M,uBCLbK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIHG,MAAMR,GAJH,cAIfS,EAJe,gBAKEA,EAAIC,OALN,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAO,IAAD,EAC3B,MAAO,CACLhB,GAAIgB,EAAEhB,GACNC,MAAOe,EAAEf,MACTC,IAAG,UAAEc,EAAEC,cAAJ,aAAE,EAAUC,iBAAiBhB,QAXf,kBAcdY,GAdc,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SACVU,ECFY,SAACV,GAAc,IAAD,EACdnB,mBAAS,CACjCyB,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACC,GACtBH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAGZ,CAACb,IAEGc,EDbkBK,CAAanB,GAA9BM,KAER,OACE,oCACE,wBAAIV,UAAU,mBAAmBI,GACjC,yBAAKJ,UAAU,aACZc,EAAOF,KAAI,SAACU,GACX,OAAO,kBAAC,EAAD,eAASE,IAAKF,EAAIzB,IAAQyB,UEN9BG,EAAe,WAAO,IAAD,EACIxC,mBAAS,CAAC,WADd,mBACzByC,EADyB,KACb1C,EADa,KAGhC,OACE,oCACE,6CAEA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEA,4BACG0C,EAAWd,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,UCf5CuB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.a9182712.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [imputValue, setImputValue] = useState(\"Hola Mundo\");\n\n  const handleImputChange = (e) => {\n    setImputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCategories((cate) => {\n      setCategories([imputValue, ...cate]);\n      setImputValue(\"\");\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={imputValue} onChange={handleImputChange} />\n    </form>\n  );\n};\n","import React from \"react\";\n\nexport const GifItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card  animate__heartBeat\">\n      <img src={url} alt={title} />\n    </div>\n  );\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=I5MDZwZS4vA0bRWRJrNH0Ncu3XKZK4TV`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n\n  const gifs = data.map((g) => {\n    return {\n      id: g.id,\n      title: g.title,\n      url: g.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\nimport { GifItem } from \"./GifItem\";\nimport { useFetchGifs } from \"./hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images } = useFetchGifs(category);\n\n  return (\n    <>\n      <h2 className=\"animate__wobble\">{category}</h2>\n      <div className=\"card-grid\">\n        {images.map((img) => {\n          return <GifItem key={img.id} {...img} />;\n        })}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((img) => {\n      setState({\n        data: img,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\n\nimport \"./index.css\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertapp = () => {\n  const [categories, setCategories] = useState([\"Frutas\"]);\n\n  return (\n    <>\n      <h1>GifExpertapp </h1>\n\n      <AddCategory setCategories={setCategories} />\n\n      <hr />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertapp } from \"./GifExpertapp\";\n\nReactDOM.render(<GifExpertapp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}